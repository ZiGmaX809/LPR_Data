name: Update LPR Data

# 定时运行：每天北京时间上午10点（UTC时间凌晨2点）
# 也可以手动触发
on:
  schedule:
    - cron: '0 2 * * *'  # UTC时间每天凌晨2点（北京时间上午10点）
  workflow_dispatch:  # 允许手动触发
  push:
    paths:
      - 'lpr_scraper.py'
      - '.github/workflows/update-lpr-data.yml'

jobs:
  update-lpr-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许写入仓库内容
      actions: read    # 允许读取 actions
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.PAT || secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests beautifulsoup4
    
    - name: Run LPR data scraper
      run: |
        python lpr_scraper.py --force
        
    - name: List generated files
      run: |
        echo "文件列表："
        ls -la LPR_Data.* || echo "未找到LPR_Data文件"
        
        if [ -f "LPR_Data.json" ]; then
          echo "JSON文件内容预览："
          head -10 LPR_Data.json
        else
          echo "JSON文件未生成"
        fi
    
    - name: Check for changes
      id: check_changes
      run: |
        # 添加新文件到git跟踪
        git add LPR_Data.txt LPR_Data.json LPR_Data.csv || true
        
        # 检查是否有文件变化（包括新文件）
        if git diff --cached --exit-code --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "没有检测到变化"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "检测到变化"
          git diff --cached --name-only
        fi
    
    - name: Commit and push changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 获取当前北京时间
        BEIJING_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')
        
        # 提交变更（文件已在上一步添加）
        git commit -m "🤖 自动更新LPR数据 - $BEIJING_TIME"
        
        # 推送到仓库
        git push
    
    - name: Upload LPR data as artifact
      uses: actions/upload-artifact@v4
      with:
        name: lpr-data-${{ github.run_number }}
        path: |
          LPR_Data.txt
          LPR_Data.json
          LPR_Data.csv
        retention-days: 30
    
    - name: Create release on significant updates
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        # 检查是否是重要更新（比如新增了数据记录）
        if [ -f "LPR_Data.json" ]; then
          RECORD_COUNT=$(python -c "import json; data=json.load(open('LPR_Data.json')); print(len(data['data']))")
          echo "Current record count: $RECORD_COUNT"
          
          # 如果记录数量是5的倍数，创建一个release（可选）
          if [ $((RECORD_COUNT % 5)) -eq 0 ]; then
            echo "Creating release for milestone: $RECORD_COUNT records"
            # 这里可以添加创建release的逻辑
          fi
        fi

        